buildscript {
    repositories {
        jcenter()
    }

    dependencies {   
        classpath 'org.akhikhl.gretty:gretty:+'
        classpath 'com.bmuschko:gradle-cargo-plugin:2.3'
    }
}

apply plugin: 'war'
apply plugin: 'idea'
apply plugin: 'org.akhikhl.gretty'
apply plugin: 'com.bmuschko.cargo'

gretty {
    servletContainer = 'jetty9.4'
}

configurations {
    modules {}
    plugins {}


    war {}

    wildfly

    libraries {
        transitive = false
    }

    transitiveLibraries {
        transitive = true
    }
}



dependencies {
    
    compile 'de.neuland-bfi:jade4j:1.2.7'
    compile 'de.neuland-bfi:spring-jade4j:1.2.7'
    
    compile 'org.springframework:spring-webmvc'

    wildfly 'io.sunshower.wildfly:wildfly-dist:1.0.0-SNAPSHOT@zip'
    plugins 'io.sunshower.deployment:sunshower-web:1.0.0-SNAPSHOT@war'

    testCompile 'io.sunshower.test:test-common:1.0.0-SNAPSHOT'

    testCompile 'org.junit.jupiter:junit-jupiter-api'
    testCompile 'org.junit.platform:junit-platform-runner'

    testCompile group: 'org.jboss.arquillian.junit', name: 'arquillian-junit-container'
    testCompile group: 'org.wildfly.arquillian', name: 'wildfly-arquillian-container-managed'


}


artifacts {
    war tasks.war
}


task unpackWildfly(type: Copy) {
    dependsOn configurations.wildfly

    from {
        configurations.wildfly.collect { zipTree(it) }
    }
    into "${project.buildDir}/wildfly"
}

task unpackPlugins(type: Copy, dependsOn: 'unpackWildfly') {
    dependsOn configurations.plugins

    from configurations.plugins
    into "$project.buildDir/wildfly/sunshower-wildfly/standalone/deployments"
}

war {
    dependsOn configurations.modules
    from {
        configurations.modules.collect { zipTree(it) }
    }
    into "/"
}

//build.dependsOn unpackModules
//build.mustRunAfter unpackModules

test.dependsOn unpackPlugins
test.mustRunAfter unpackPlugins

test.dependsOn unpackWildfly
test.mustRunAfter unpackWildfly
